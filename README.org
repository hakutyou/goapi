#+TITLE: GoApi 通用 API 接口 (gin 的一些 demo)
#+AUTHOR: 白鳥鵠
#+DATE: 2020-05-11
#+OPTIONS: ^:{}

* TODO 更新列表
- 异步 [3/4]
  - [X] 异步 (Async)
  - [X] rpcx
  - [ ] Async 跟 rpcx 合并
  - [X] Accounnt 服务分离
- 功能 [3/3]
  - [X] Excel 支持
  - [X] 可能把 requests 移除, 好像用 net/http 就够了
  - [X] 使用 Crypto/rand 代替 Math/rand
  - [X] 发送邮件支持
- [X] json 代理
- [X] 使用 gracehttp

* Quick Start
#+BEGIN_SRC bash
# 增加缺失的包, 移除没用的包
go mod tidy
# 把依赖拷贝到 ./vendor/ 下
go mod vendor
# 配置 yaml
# debug 模式使用 script/debug.yaml
cp script/release.yaml .config.yaml
cp script/release.account.yaml .account.yaml
cp script/core.yaml .core.yaml
cp script/zap.yaml .zap.yaml

# 设置 data
cp data/sensitive.dat.orig data/sensitive.dat
#+END_SRC

- 运行
#+BEGIN_SRC bash
# consumer 为 Asynq 的 worker
go run ./web
#+END_SRC

- 编译运行
#+BEGIN_SRC bash
# 确保编译环境和正式环境的 GLIBC 版本一致
# 可以通过 `ldd --version` 查看
make
#+END_SRC

* Packages
** Excelize
#+BEGIN_EXAMPLE
https://xuri.me/excelize/zh-hans/
#+END_EXAMPLE

** RPCx
*** 安装
#+BEGIN_SRC bash
# 使用 tags 安装
go get -u -v -tags "etcd ping" github.com/smallnest/rpcx/...
#+END_SRC

** Swagger
*** 安装
#+BEGIN_SRC bash
# 安装 swag
go get -u github.com/swaggo/swag/cmd/swag
cd $GOPATH/src/github.com/swaggo/swag/cmd/swag
go install
# 验证安装
swag -v
#+END_SRC

*** 部署
#+BEGIN_SRC bash
cd web
swag init
#+END_SRC

* Git
** 添加子项目
#+BEGIN_SRC bash
git submodule init
git submodule add git@e.coding.net:hakutyou/goapi_script.git script

# 远程拉取
git submodule init
git submodule update
#+END_SRC

* 其他问题
** Format
- GoLand 保存文件时自动使用 `go fmt` 格式化代码
#+BEGIN_EXAMPLE
Settings -> Tools -> File Watcher -> Add -> go fmt

同理可开启 golangci-link, goimports
#+END_EXAMPLE

** Golang
- 代理
#+BEGIN_EXAMPLE
https://goproxy.cn
#+END_EXAMPLE

** Mariadb
- 创建数据库
#+BEGIN_SRC mysql
-- mysql -h 127.0.0.1 -uroot -p
create database api default character set utf8mb4 collate utf8mb4_unicode_ci;
-- 如果已经建立了数据库
alter database api character set utf8mb4 collate utf8mb4_general_ci;
-- 如果已经建立了表
-- use api;
alter table my_table convert to character set utf8mb4 collate utf8mb4_general_ci;
#+END_SRC

- GoLand 无法连接尝试使用以下 URL 确定时区信息
#+BEGIN_EXAMPLE
jdbc:mysql://localhost:3306/goapi?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#+END_EXAMPLE

** docker-compose
#+BEGIN_SRC bash
# 如果使用 resource limit 功能且没有 swarm, 需要加 --compatibility 参数
docker-compose --compatibility up -d
#+END_SRC

** Git
Windows 下可执行权限问题
#+BEGIN_SRC bash
git config core.filemode false
#+END_SRC
